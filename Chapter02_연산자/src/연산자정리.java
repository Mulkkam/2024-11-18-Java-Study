/*
 * 	데이터저장 (변수) ========> 요청 처리 ==========> 화면 출력
 * 						   연산자/제어문
 * 						  ===========
 * 
 * 	단항연산자
 * 		증감연산자 / 형변환연산자 / 부정연산자 => 조건문 / 반복문 조건 => 제어문
 * 		++, --	  => 실수 => 정수			 !(boolean으로만 사용 가능)
 * 		======		(데이터형)변수|값		 
 * 		1씩증가,감소	 => 크기 순서
 * 							DownCasiting	UpCasting
 * 							<==				==>
 * 							강제 형변환		자동형변환
 * 				byte < short < int < long < float < double < char
 * 				변수 => 작은 데이터는 저장이 가능
 * 				long a=10;
 * 					   -- int데이터 => 자동으로 long으로 변경 => 10L
 * 				int a='A';
 * 					  ----int데이터
 * 				** 큰데이터는 첨부가 불가능
 * 				int a=10.0; => 오류 발생
 * 					  ==== 큰 데이터
 * 				** float/double => f/F
 * 				** int/long => l/L
 * 				** 형변환 => 클래스 형변환
 * 
 * 	이항연산자
 * 		산술연산자 (+ , - , * , / , %)
 * 		** 산술 규칙
 * 		1) 같은 데이터형만 연산이 가능
 * 		   long + int
 * 				  ===
 * 				  long 변경 => 자동으로 큰 데이터형으로 변경후에 연산
 * 		   'A'+ 10
 * 			==
 * 			65 + 10 =75
 * 		2) int 이하 데이터형을 연산 => 결과값이 int
 * 		   ====== byte / short / char
 * 		3) char는 연산시에 자동으로 정수형으로 변경후에 처리
 * 		** 연산 처리
 * 			+ : 더하기, 문자열결합
 * 					  =======
 * 					  5 + "5"  =>  "55"
 * 					  "5" + 5  =>  "55"
 * 			/ : 0으로 나눌 수 없다 => 오류 발생
 * 				정수/정수=정수
 * 				========== 5/2=2
 * 			% : 나머지
 * 				부호 ( + , -)
 * 				5%2 = 1
 * 				-5%2 = -1
 * 				-5%-2 = -1
 * 				----------
 * 				=> 왼쪽부호를 따라감
 * 			*** 가장 많이 사용되는 연산
 * 				=> 합 / 평균
 * 				=> 웹 프로그램 : 로직이 없다, 흐름
 * 
 * 	============================= 조건문/반복문 => 결과값 : true/false
 * 	비교연산자 
 * 		문자열은 비교할수 없다 / 문자, 숫자, 논리
 * 		=>	== 같다
 * 			!= 같지 않다
 * 			<  작다 ==> 왼쪽 기준
 * 			>  크다
 * 			<= 작거나 같다 : < || ==
 * 			>= 크거나 같다 : > || ==
 * 			
 * 			'A'=='a'  ==>  65==97 
 * 			=> if (부정연산자/비교연산자/논리연산자) => 조건
 * 			=> 평문
 * 			=> 조건문 : 필요시 사용, 불필요시 건너뛴다
 * 			=> 반복문 : 게임
 * 			======================= 흐름제어
 * 	논리연산자
 * 		&& => 범위 포함(기간) => 조건 두개가 ture일때만 true => 나머지는 flase
 * 			*** && 앞에 있는 조건이 false일 경우 뒤의 조건은 처리하지 않는다
 * 			=> 효율적인 연산
 * 		|| => 범위밖에 있는 경우 => 조건 중 한개 이상의 true가 있으면 true
 * 			*** || 앞에 있는 조건이 true일 경우 뒤의 조건은 처리하지 않는다 
 * 	=============================
 * 	대입연산자
 * 	삼항연산자
 * 	=> 조건문
 * 	=> 변수 / 연산자 / 제어문 => 문법, 형식, 동작 순서
 * 		=> 1. 배열, 2. 메소드, 3. 객체지향, 4.JDBC
 */
public class 연산자정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
